#
#  Command-line completion for bx.
#
_bx()
{
    local current="${COMP_WORDS[COMP_CWORD]}"

    # Generated from XML data source.
    local commands="
        address-decode
        address-embed
        address-encode
        address-to-key
        base16-decode
        base16-encode
        base58-decode
        base58-encode
        base58check-decode
        base58check-encode
        base64-decode
        base64-encode
        bitcoin160
        bitcoin256
        broadcast-tx
        btc-to-satoshi
        cert-new
        cert-public
        ec-add
        ec-add-secrets
        ec-decompress
        ec-multiply
        ec-multiply-secrets
        ec-new
        ec-to-address
        ec-to-ek
        ec-to-public
        ec-to-wif
        ec-to-witness
        ek-address
        ek-new
        ek-public
        ek-public-to-address
        ek-public-to-ec
        ek-to-address
        ek-to-ec
        electrum-new
        electrum-to-seed
        fetch-balance
        fetch-block
        fetch-block-hashes
        fetch-block-height
        fetch-filter
        fetch-filter-checkpoint
        fetch-filter-headers
        fetch-header
        fetch-height
        fetch-history
        fetch-public-key
        fetch-tx
        fetch-tx-index
        fetch-utxo
        get-filter-checkpoint
        get-filter-headers
        get-filters
        hd-new
        hd-private
        hd-public
        hd-to-ec
        hd-to-public
        help
        input-set
        input-sign
        input-validate
        match-neutrino-address
        match-neutrino-script
        message-sign
        message-validate
        mnemonic-new
        mnemonic-to-seed
        put-tx
        qrcode
        ripemd160
        satoshi-to-btc
        script-decode
        script-encode
        script-to-address
        script-to-key
        seed
        send-tx
        settings
        sha160
        sha256
        sha512
        stealth-decode
        stealth-encode
        stealth-public
        stealth-secret
        stealth-shared
        subscribe-block
        subscribe-tx
        token-new
        tx-decode
        tx-encode
        tx-sign
        uri-decode
        uri-encode
        validate-tx
        version
        watch-key
        watch-tx
        wif-to-ec
        wif-to-public
        witness-to-key
        wrap-decode
        wrap-encode
    "

    if [[ $COMP_CWORD == 1 ]]; then
        COMPREPLY=( `compgen -W "$commands" -- $current` )
        return
    fi

    local command=COMP_WORDS[1]
    local options="--config --help -c -h"

    # TODO: Generate per-command options here

    COMPREPLY=( `compgen -W "$options" -- $current` )
}
complete -F _bx bx
